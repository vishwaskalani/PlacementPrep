1) https://www.puzzledquant.com/problems/clgfh66v50026l4087daeofkl

2) PHP
  https://www.puzzledquant.com/problems/clgfh6cpk0030l4082xphz8v8

3) A fantastic card guessing puzzle 
https://math.stackexchange.com/questions/2973819/a-magic-trick-find-out-the-fifth-card-if-four-is-given

This puzzle says that on chosing 5 cards randomly out of the deck and planning with our teammate, we
can give him 4 cards in such an order that he will be able to guess the 5th card.
For example we can first give the card of the same suit, we must chose the card wisely. Then we have 
an ordering in the cards among suits and their values using permutation of which we encode the value of the
5th card.

4) Remember gambler's ruin general formula
https://www.puzzledquant.com/problems/clhudggrm001gmm086qrv9yeu

5)Covariance and correlation formula,  you must Remember, good q for revision
Cov(X,Y) = E[XY]-E[X]E[Y]

correlation = Cov(X,Y)/sqrt(var(X),var(Y))
https://www.puzzledquant.com/problems/clhudgax8000smm08fc0ukkge

Think on variance of indicator variable as E(Ia^2)-(E(Ia))^2


6) Very important question
https://www.puzzledquant.com/problems/clhudgg8s001emm08lfxy5oab

Based on the recursive equation
P(x,y) = ((x-1)/(y-1))*P(x-1,y-1) + (1 - (x/(y-1)))*P(x,y-1)

Then based on induction argue that the answer of P(x,y) = 1/(y-1)
so answer is 1/99

7) Very interesting problem, based on dividing in two grps with increasing subsequences
https://www.puzzledquant.com/problems/clhrexqs30002l608jui31ony

consider 2,3,4,5,6,7
We have to make two grps out of it. Number of ways is 6C0+6C1+.... = 2^6
Out of those ways when our second grp is the suffix of this sequence, then we have no left turn
therefore let us remove those cases which are 7. So we get total 2^6-7 = 57 ways

8) Important noodle connecting problem, expectation is tough, probability is easy
https://www.puzzledquant.com/problems/clgfh6h43000ala08lo8diig6

9) Very easy but important problem, coupon collector problem based on geometric probability
The problem is the expected number of turns in which we would have collected all the coupons
https://en.wikipedia.org/wiki/Coupon_collector%27s_problem
think of an event having success probability p and failure probability 1-p, then the expected number of turns for success is:
e = p +(1-p)(1+e) and u will get e = 1/p
now think of coupon collection as t = t1+t2+..ti...
where ti is the event of collecting ith coupon when u have collected i-1 coupons
therefore the answer comes out to be n(1+1/2+1/3....) ~ nlogn

